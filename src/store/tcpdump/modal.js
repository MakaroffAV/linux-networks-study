const state = {

    modalOpen: false,

    modalTitle: "Tcpdump",
    modalDescription: `
        <p>Утилита tcpdump - это очень мощный и популярный инструмент для перехвата и анализа сетевых пакетов. Она позволяет просматривать все входящие и исходящие из определенного интерфейса пакеты и работает в командной строке. Конечно, вы могли бы пользоваться Wirshark для анализа сетевых пакетов, это графическая утилита, но иногда бывают ситуации когда нужно работать только в терминале.</p>
        <p>Перед тем как перейти к примерам работы с утилитой, давайте рассмотрим ее синтаксис и основные опции. Команда имеет такой синтаксис:</p>
        <p><strong><span style="color: #ff9900;">$ tcpdump</span><span style="color: #99cc00;"> опции</span> <span style="color: #339966;">-i интерфейс</span> <span style="color: #993366;">фильтры</span></strong></p>
        <p>При вызове обязательно нужно передать интерфейс, который будете отслеживать. Если интерфейс не указать, то будет использован первый в списке. Опции настраивают отображение и основные возможности утилиты, а фильтры позволяют отсеять ненужные пакеты. А теперь рассмотрим основные опции:</p>
        <ul>
            <li><strong>-A</strong> - выводить все пакеты в формате ASCII;</li>
            <li><strong>-c</strong> - закрыть программу после перехвата n-ого количества пакетов;</li>
            <li><strong>-C</strong> - при записи пакетов в файл, проверять размер файла, и если он больше заданного - создать новый файл;</li>
            <li><strong> -D</strong> - вывести список доступных сетевых интерфейсов;</li>
            <li><strong>-e</strong> - выводить информацию уровня соединения для каждого пакета, это может быть полезно, например, для отображения MAC адреса;</li>
            <li><strong>-f</strong> - выводить доменное имя для ip адресов;</li>
            <li><strong>-F</strong> - читать пакеты из файла, а не интерфейса;</li>
            <li><strong>-G</strong> - создавать новый файл лога через указанный промежуток времени;</li>
            <li><strong>-H</strong> - обнаруживать заголовки&nbsp;802.11s;</li>
            <li><strong>-i</strong> - имя интерфейса для перехвата пакетов. Вы можете захватывать пакеты со всех интерфейсов, для этого укажите any;</li>
            <li><strong>-I</strong> - переключить интерфейс в режим монитора для захвата всех проходящих пакетов;</li>
            <li><strong>-j</strong> - установить формат Timestamp для записи пакетов;</li>
            <li><strong>-J</strong> - посмотреть доступные Timestamp;</li>
            <li><strong>-K</strong> - не проверять контрольные суммы пакетов;</li>
            <li><strong>-l</strong> - добавить поддержку прокрутки к выводу;</li>
            <li><strong>-L</strong> - вывести поддерживаемые протоколы подключения для интерфейса;</li>
            <li><strong>-n</strong> - не отображать доменные имена;</li>
            <li><strong>-r</strong> - прочитать пакеты из файла, созданного с помощью -w;</li>
            <li><strong>-v, -vv, -vvv</strong> - более подробный вывод;</li>
            <li><strong>-q</strong> - выводить минимум информации;</li>
            <li><strong>-w</strong> - записать вывод в файл;</li>
            <li><strong>-Z</strong> - пользователь, от имени которого будут создаваться файлы.</li>
        </ul>
    `
    
}

const getters = {

    getTcpDumpModalStatus: state => state.modalOpen,

    getTcpDumpModalTitle: state => state.modalTitle,
    getTcpDumpModalDescription: state => state.modalDescription

}

const actions = {

}

const mutations = {

    changeTcpDumpModalStatus: function(state, payload) {

        state.modalOpen = !state.modalOpen

    }
    
}

export default {
    state, getters, actions, mutations
}

